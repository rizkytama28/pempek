---
interface Props {
    item: any;
}

const { item } = Astro.props;
const isAvailable = item.available;
const imageUrl = item.image_url;
const transformedImageUrl = imageUrl ? `${imageUrl}?width=400&height=400&resize=cover` : '/images/placeholder.jpg';
const cartImageUrl = imageUrl ? `${imageUrl}?width=100&height=100&resize=cover` : '/images/placeholder.jpg';
---

<div class={`bg-surface rounded-lg overflow-hidden shadow-lg border border-background ${!isAvailable ? 'opacity-50' : ''}`}>
    <img src={transformedImageUrl} alt={`Gambar ${item.name}`} class="w-full h-48 object-cover">
    <div class="p-4">
        <h3 class="text-xl font-bold text-text-main">{item.name}</h3>
        <p class="mt-2 text-lg text-primary font-semibold">
            Rp {item.price.toLocaleString('id-ID')}
        </p>
        <div class="mt-4">
            {isAvailable ? (
                <button 
                    data-item-id={item.id}
                    data-item-name={item.name}
                    data-item-price={item.price}
                    data-item-image={cartImageUrl}
                    class="add-to-cart-btn w-full bg-primary hover:bg-primary/90 text-background font-bold py-2 px-4 rounded transition-colors duration-300">
                    + Tambah ke Keranjang
                </button>
            ) : (
                <button 
                    disabled
                    class="w-full bg-surface text-text-main/50 font-bold py-2 px-4 rounded cursor-not-allowed">
                    Habis
                </button>
            )}
        </div>
    </div>
</div>

<script>
    import { addCartItem } from '../stores/cart';

    document.querySelectorAll('.add-to-cart-btn:not([disabled])').forEach(button => {
        const originalText = button.textContent;
        const btn = button as HTMLButtonElement;

        btn.addEventListener('click', () => {
            if (btn.disabled) return;

            const { itemId, itemName, itemPrice, itemImage } = btn.dataset;
            addCartItem({
                id: itemId!,
                name: itemName!,
                price: Number(itemPrice!),
                image: itemImage!
            });

            btn.disabled = true;
            btn.textContent = 'Ditambahkan!';
            btn.classList.remove('bg-primary', 'hover:bg-primary/90', 'text-background');
            btn.classList.add('bg-surface', 'text-primary', 'border', 'border-primary');
            
            setTimeout(() => {
                btn.textContent = originalText;
                btn.classList.remove('bg-surface', 'text-primary', 'border', 'border-primary');
                btn.classList.add('bg-primary', 'hover:bg-primary/90', 'text-background');
                btn.disabled = false;
            }, 1000);
        });
    });
</script>