{
  "version": 3,
  "sources": ["../../@nanostores/react/index.js"],
  "sourcesContent": ["import { listenKeys } from 'nanostores'\nimport { useCallback, useRef, useSyncExternalStore } from 'react'\n\nlet emit = (snapshotRef, onChange) => value => {\n  if (snapshotRef.current === value) return\n  snapshotRef.current = value\n  onChange()\n}\n\nexport function useStore(store, { keys, deps = [store, keys] } = {}) {\n  let snapshotRef = useRef()\n  snapshotRef.current = store.get()\n\n  let subscribe = useCallback(onChange => {\n    emit(snapshotRef, onChange)(store.value)\n\n    return keys?.length > 0\n      ? listenKeys(store, keys, emit(snapshotRef, onChange))\n      : store.listen(emit(snapshotRef, onChange))\n  }, deps)\n  let get = () => snapshotRef.current\n\n  return useSyncExternalStore(subscribe, get, get)\n}\n"],
  "mappings": ";;;;;;;;;;;AACA,mBAA0D;AAE1D,IAAI,OAAO,CAAC,aAAa,aAAa,WAAS;AAC7C,MAAI,YAAY,YAAY,MAAO;AACnC,cAAY,UAAU;AACtB,WAAS;AACX;AAEO,SAAS,SAAS,OAAO,EAAE,MAAM,OAAO,CAAC,OAAO,IAAI,EAAE,IAAI,CAAC,GAAG;AACnE,MAAI,kBAAc,qBAAO;AACzB,cAAY,UAAU,MAAM,IAAI;AAEhC,MAAI,gBAAY,0BAAY,cAAY;AACtC,SAAK,aAAa,QAAQ,EAAE,MAAM,KAAK;AAEvC,YAAO,6BAAM,UAAS,IAClB,WAAW,OAAO,MAAM,KAAK,aAAa,QAAQ,CAAC,IACnD,MAAM,OAAO,KAAK,aAAa,QAAQ,CAAC;AAAA,EAC9C,GAAG,IAAI;AACP,MAAI,MAAM,MAAM,YAAY;AAE5B,aAAO,mCAAqB,WAAW,KAAK,GAAG;AACjD;",
  "names": []
}
