import {
  listenKeys
} from "./chunk-4KSJFT6A.js";
import {
  require_react
} from "./chunk-FTFSCOIU.js";
import {
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/@nanostores/react/index.js
var import_react = __toESM(require_react());
var emit = (snapshotRef, onChange) => (value) => {
  if (snapshotRef.current === value) return;
  snapshotRef.current = value;
  onChange();
};
function useStore(store, { keys, deps = [store, keys] } = {}) {
  let snapshotRef = (0, import_react.useRef)();
  snapshotRef.current = store.get();
  let subscribe = (0, import_react.useCallback)((onChange) => {
    emit(snapshotRef, onChange)(store.value);
    return (keys == null ? void 0 : keys.length) > 0 ? listenKeys(store, keys, emit(snapshotRef, onChange)) : store.listen(emit(snapshotRef, onChange));
  }, deps);
  let get = () => snapshotRef.current;
  return (0, import_react.useSyncExternalStore)(subscribe, get, get);
}
export {
  useStore
};
//# sourceMappingURL=@nanostores_react.js.map
